{"version":3,"sources":["components/HotelList.js","components/HotelForm.js","components/RoomForm.js","components/RoomList.js","components/RoomRateList.js","components/AddRoomRate.js","App.js","index.js"],"names":["HotelList","_ref","hotels","setHotels","editingHotelId","setEditingHotelId","useState","hotelName","setHotelName","hotelFacilities","setHotelFacilities","handleDelete","useCallback","async","axios","get","concat","process","id","data","length","alert","delete","prevHotels","filter","hotel","console","log","error","handleSave","updatedHotel","name","facilities","put","map","handleCancel","_jsxs","children","_jsx","_Fragment","type","value","onChange","e","target","placeholder","onClick","handleEdit","HotelForm","addHotel","setHotel","handleChange","prev","onSubmit","preventDefault","response","post","required","RoomForm","roomId","onSuccess","selectedHotelId","room","setRoom","hotel_id","room_type","occupancy_adults","occupancy_kids","allocation","board","kids_supplement","third_bed_supplement","fourth_bed_supplement","successMessage","setSuccessMessage","useEffect","then","catch","setTimeout","RoomList","rooms","setRooms","setSelectedHotelId","editingRoomId","setEditingRoomId","prevRooms","handleSuccess","RoomRateList","roomRates","setRoomRates","loading","setLoading","filters","setFilters","room_id","start_date","end_date","min_price","max_price","sort_by","params","hotelId","fetchRooms","fetchHotels","fetchRoomRates","handleFilterChange","euroFormatter","Intl","NumberFormat","style","currency","rate","hotel_name","format","price","Date","toLocaleDateString","className","AddRoomRate","roomRate","setRoomRate","step","App","showHotelList","setShowHotelList","display","alignItems","gap","marginBottom","newHotel","toggleHotelList","prevState","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b9560c1.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HotelList = ({ hotels = [], setHotels }) => { // Default to empty array if not provided\r\n    const [editingHotelId, setEditingHotelId] = useState(null);\r\n    const [hotelName, setHotelName] = useState('');\r\n    const [hotelFacilities, setHotelFacilities] = useState('');\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        try {\r\n            // Check if the hotel has rooms\r\n            const response = await axios.get(`${process.env.REACT_APP_API_URL}/hotels/${id}/rooms`);\r\n            if (response.data.length > 0) {\r\n                // If hotel has rooms, show an alert message\r\n                alert('This hotel has rooms and cannot be deleted.');\r\n            } else {\r\n                // If no rooms, proceed with deletion\r\n                await axios.delete(`${process.env.REACT_APP_API_URL}/hotels/${id}`);\r\n                setHotels(prevHotels => prevHotels.filter(hotel => hotel.id !== id));\r\n                console.log(`Deleted hotel with id: ${id}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting hotel', error);\r\n        }\r\n    }, [setHotels]);\r\n\r\n    const handleEdit = (hotel) => {\r\n        setEditingHotelId(hotel.id);\r\n        setHotelName(hotel.name);\r\n        setHotelFacilities(hotel.facilities);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            const updatedHotel = { name: hotelName, facilities: hotelFacilities };\r\n            await axios.put(`${process.env.REACT_APP_API_URL}/hotels/${editingHotelId}`, updatedHotel);\r\n            setHotels(prevHotels =>\r\n                prevHotels.map(hotel => hotel.id === editingHotelId ? { ...hotel, ...updatedHotel } : hotel)\r\n            );\r\n            setEditingHotelId(null);\r\n            console.log(`Updated hotel with id: ${editingHotelId}`);\r\n        } catch (error) {\r\n            console.error('Error updating hotel', error);\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setEditingHotelId(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Hotel List</h2>\r\n            <ul>\r\n                {hotels.length === 0 ? (\r\n                    <p>No hotels available</p>\r\n                ) : (\r\n                    hotels.map(hotel => (\r\n                        <li key={hotel.id}>\r\n                            {editingHotelId === hotel.id ? (\r\n                                <>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={hotelName}\r\n                                        onChange={(e) => setHotelName(e.target.value)}\r\n                                        placeholder=\"Hotel Name\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={hotelFacilities}\r\n                                        onChange={(e) => setHotelFacilities(e.target.value)}\r\n                                        placeholder=\"Hotel Facilities\"\r\n                                    />\r\n                                    <button onClick={handleSave}>Save</button>\r\n                                    <button onClick={handleCancel}>Cancel</button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    {hotel.name} - {hotel.facilities}\r\n                                    <button onClick={() => handleEdit(hotel)}>Edit</button>\r\n                                    <button onClick={() => handleDelete(hotel.id)}>Delete</button>\r\n                                </>\r\n                            )}\r\n                        </li>\r\n                    ))\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HotelList;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HotelForm = ({ addHotel }) => {\r\n    const [hotel, setHotel] = useState({\r\n        name: '',\r\n        facilities: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setHotel(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevents the default form submission behavior\r\n\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/hotels/`, hotel);\r\n            addHotel(response.data);\r\n            setHotel({ name: '', facilities: '' }); // Reset form fields\r\n        } catch (error) {\r\n            console.error('Error adding hotel:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                name=\"name\"\r\n                value={hotel.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Hotel Name\"\r\n                required\r\n            />\r\n            <input\r\n                name=\"facilities\"\r\n                value={hotel.facilities}\r\n                onChange={handleChange}\r\n                placeholder=\"Facilities\"\r\n            />\r\n            <button type=\"submit\">Add Hotel</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default HotelForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RoomForm = ({ roomId, onSuccess, selectedHotelId }) => {\r\n    const [room, setRoom] = useState({\r\n        hotel_id: selectedHotelId,\r\n        room_type: '',\r\n        occupancy_adults: '',\r\n        occupancy_kids: '',\r\n        allocation: '',\r\n        facilities: '',\r\n        board: '',\r\n        kids_supplement: '',\r\n        third_bed_supplement: '',\r\n        fourth_bed_supplement: ''\r\n    });\r\n\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            axios.get(`${process.env.REACT_APP_API_URL}/rooms/${roomId}`)\r\n                .then(response => setRoom(response.data))\r\n                .catch(error => console.error('Error fetching room:', error));\r\n        }\r\n    }, [roomId]);\r\n\r\n    const handleChange = (e) => {\r\n        setRoom({ ...room, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const apiCall = roomId\r\n            ? axios.put(`${process.env.REACT_APP_API_URL}/rooms/${roomId}`, room)\r\n            : axios.post(`${process.env.REACT_APP_API_URL}/rooms`, { ...room, hotel_id: selectedHotelId });\r\n\r\n        apiCall.then(() => {\r\n            onSuccess();\r\n            setSuccessMessage('Room saved successfully!');\r\n            setTimeout(() => setSuccessMessage(''), 3000); // Hide the message after 3 seconds\r\n            setRoom({\r\n                hotel_id: selectedHotelId,\r\n                room_type: '',\r\n                occupancy_adults: '',\r\n                occupancy_kids: '',\r\n                allocation: '',\r\n                facilities: '',\r\n                board: '',\r\n                kids_supplement: '',\r\n                third_bed_supplement: '',\r\n                fourth_bed_supplement: ''\r\n            });\r\n        }).catch(error => console.error('Error saving room:', error));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {roomId ? <h3>Edit Room</h3> : <h3>Add Room</h3>}\r\n            {successMessage && <p>{successMessage}</p>}\r\n            <input\r\n                type=\"text\"\r\n                name=\"room_type\"\r\n                value={room.room_type}\r\n                onChange={handleChange}\r\n                placeholder=\"Room Type\"\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"occupancy_adults\"\r\n                value={room.occupancy_adults}\r\n                onChange={handleChange}\r\n                placeholder=\"Occupancy Adults\"\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"occupancy_kids\"\r\n                value={room.occupancy_kids}\r\n                onChange={handleChange}\r\n                placeholder=\"Occupancy Kids\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"allocation\"\r\n                value={room.allocation}\r\n                onChange={handleChange}\r\n                placeholder=\"Allocation\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"facilities\"\r\n                value={room.facilities}\r\n                onChange={handleChange}\r\n                placeholder=\"Facilities\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"board\"\r\n                value={room.board}\r\n                onChange={handleChange}\r\n                placeholder=\"Board\"\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"kids_supplement\"\r\n                value={room.kids_supplement}\r\n                onChange={handleChange}\r\n                placeholder=\"Kids Supplement\"\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"third_bed_supplement\"\r\n                value={room.third_bed_supplement}\r\n                onChange={handleChange}\r\n                placeholder=\"Third Bed Supplement\"\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"fourth_bed_supplement\"\r\n                value={room.fourth_bed_supplement}\r\n                onChange={handleChange}\r\n                placeholder=\"Fourth Bed Supplement\"\r\n            />\r\n            <button type=\"submit\">Save Room</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RoomForm;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport RoomForm from './RoomForm';\r\n\r\nconst RoomList = ({ hotels }) => {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [selectedHotelId, setSelectedHotelId] = useState('');\r\n    const [editingRoomId, setEditingRoomId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (selectedHotelId) {\r\n            axios.get(`${process.env.REACT_APP_API_URL}/rooms?hotel_id=${selectedHotelId}`)\r\n                .then(response => setRooms(response.data))\r\n                .catch(error => console.error('Error fetching rooms:', error));\r\n        } else {\r\n            setRooms([]); // Clear rooms if no hotel is selected\r\n        }\r\n    }, [selectedHotelId]);\r\n\r\n    const handleDelete = useCallback(async (id) => {\r\n        try {\r\n            // Check if the room has rates\r\n            const response = await axios.get(`${process.env.REACT_APP_API_URL}/rooms/${id}/room_rates`);\r\n            if (response.data.length > 0) {\r\n                // If the room has rates, show an alert message\r\n                alert('This room has rates and cannot be deleted.');\r\n            } else {\r\n                // If no rates, proceed with deletion\r\n                await axios.delete(`${process.env.REACT_APP_API_URL}/rooms/${id}`);\r\n                setRooms(prevRooms => prevRooms.filter(room => room.id !== id));\r\n                console.log(`Deleted room with id: ${id}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting room', error);\r\n        }\r\n    }, []);\r\n\r\n    const handleEdit = (id) => {\r\n        setEditingRoomId(id);\r\n    };\r\n\r\n    const handleSuccess = () => {\r\n        setEditingRoomId(null);\r\n        if (selectedHotelId) {\r\n            axios.get(`${process.env.REACT_APP_API_URL}/rooms?hotel_id=${selectedHotelId}`)\r\n                .then(response => setRooms(response.data))\r\n                .catch(error => console.error('Error fetching rooms:', error));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Rooms</h2>\r\n            <select\r\n                onChange={(e) => setSelectedHotelId(e.target.value)}\r\n                value={selectedHotelId}\r\n            >\r\n                <option value=\"\">Select Hotel</option>\r\n                {hotels.map(hotel => (\r\n                    <option key={hotel.id} value={hotel.id}>\r\n                        {hotel.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <RoomForm roomId={editingRoomId} onSuccess={handleSuccess} selectedHotelId={selectedHotelId} />\r\n            <ul>\r\n                {rooms.map(room => (\r\n                    <li key={room.id}>\r\n                        {room.room_type} - {room.facilities}\r\n                        <button onClick={() => handleEdit(room.id)}>Edit</button>\r\n                        <button onClick={() => handleDelete(room.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './RoomRateList.css';\r\n\r\nconst RoomRateList = () => {\r\n    const [roomRates, setRoomRates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [hotels, setHotels] = useState([]);\r\n    const [rooms, setRooms] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        hotel_id: '',\r\n        room_id: '',\r\n        start_date: '',\r\n        end_date: '',\r\n        min_price: '',\r\n        max_price: '',\r\n        occupancy_adults: '',\r\n        occupancy_kids: '',\r\n        sort_by: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchHotels = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/hotels/`);\r\n                setHotels(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching hotels', error);\r\n            }\r\n        };\r\n\r\n        const fetchRooms = async (hotelId) => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/rooms/`, { params: { hotel_id: hotelId } });\r\n                setRooms(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching rooms', error);\r\n            }\r\n        };\r\n\r\n        if (filters.hotel_id) {\r\n            fetchRooms(filters.hotel_id);\r\n        } else {\r\n            setRooms([]);\r\n        }\r\n\r\n        fetchHotels();\r\n    }, [filters.hotel_id]);\r\n\r\n    useEffect(() => {\r\n        const fetchRoomRates = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/room_rates/`, { params: filters });\r\n                console.log(\"Fetched data:\", response.data); // Log the response data\r\n                setRoomRates(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching room rates', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchRoomRates();\r\n    }, [filters]);\r\n\r\n    const handleFilterChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFilters({ ...filters, [name]: value });\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        // Logic to handle delete\r\n        try {\r\n            await axios.delete(`${process.env.REACT_APP_API_URL}/room_rates/${id}`);\r\n            setRoomRates(roomRates.filter(rate => rate.id !== id));\r\n            console.log(`Deleted room rate with id: ${id}`);\r\n        } catch (error) {\r\n            console.error('Error deleting room rate', error);\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    // Create a formatter for the Euro currency\r\n    const euroFormatter = new Intl.NumberFormat('de-DE', {\r\n        style: 'currency',\r\n        currency: 'EUR',\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>Room Rates</h1>\r\n            <form>\r\n                <select name=\"hotel_id\" onChange={handleFilterChange} value={filters.hotel_id}>\r\n                    <option value=\"\">Select Hotel</option>\r\n                    {hotels.map(hotel => (\r\n                        <option key={hotel.id} value={hotel.id}>{hotel.name}</option>\r\n                    ))}\r\n                </select>\r\n                <select name=\"room_id\" onChange={handleFilterChange} value={filters.room_id}>\r\n                    <option value=\"\">Select Room</option>\r\n                    {rooms.map(room => (\r\n                        <option key={room.id} value={room.id}>{room.room_type}</option>\r\n                    ))}\r\n                </select>\r\n                <input type=\"date\" name=\"start_date\" placeholder=\"Start Date\" onChange={handleFilterChange} value={filters.start_date} />\r\n                <input type=\"date\" name=\"end_date\" placeholder=\"End Date\" onChange={handleFilterChange} value={filters.end_date} />\r\n                <input type=\"number\" name=\"min_price\" placeholder=\"Min Price\" onChange={handleFilterChange} value={filters.min_price} />\r\n                <input type=\"number\" name=\"max_price\" placeholder=\"Max Price\" onChange={handleFilterChange} value={filters.max_price} />\r\n                <input type=\"number\" name=\"occupancy_adults\" placeholder=\"Occupancy Adults\" onChange={handleFilterChange} value={filters.occupancy_adults} />\r\n                <input type=\"number\" name=\"occupancy_kids\" placeholder=\"Occupancy Kids\" onChange={handleFilterChange} value={filters.occupancy_kids} />\r\n                <select name=\"sort_by\" onChange={handleFilterChange} value={filters.sort_by}>\r\n                    <option value=\"\">Sort By</option>\r\n                    <option value=\"price\">Price (Low to High)</option>\r\n                    <option value=\"-price\">Price (High to Low)</option>\r\n                </select>\r\n                <button type=\"button\" onClick={() => setFilters({...filters})}>Search</button>\r\n            </form>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Hotel Name</th>\r\n                        <th>Room Type</th>\r\n                        <th>Price</th>\r\n                        <th>Start Date</th>\r\n                        <th>End Date</th>\r\n                        <th>Occupancy Adults</th>\r\n                        <th>Occupancy Kids</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {roomRates.map(rate => (\r\n                        <tr key={rate.id}>\r\n                            <td>{rate.hotel_name}</td>\r\n                            <td>{rate.room_type}</td>\r\n                            <td>{euroFormatter.format(rate.price)}</td>\r\n                            <td>{new Date(rate.start_date).toLocaleDateString()}</td>\r\n                            <td>{new Date(rate.end_date).toLocaleDateString()}</td>\r\n                            <td className=\"right-align\">{rate.occupancy_adults}</td>\r\n                            <td className=\"right-align\">{rate.occupancy_kids}</td>\r\n                            <td>\r\n                                <button onClick={() => handleDelete(rate.id)}>Delete</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomRateList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddRoomRate = () => {\r\n    const [hotels, setHotels] = useState([]);\r\n    const [rooms, setRooms] = useState([]);\r\n    const [roomRate, setRoomRate] = useState({\r\n        room_id: '',\r\n        start_date: '',\r\n        end_date: '',\r\n        price: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchHotels = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/hotels/`);\r\n                setHotels(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching hotels', error);\r\n            }\r\n        };\r\n\r\n        fetchHotels();\r\n    }, []);\r\n\r\n    const handleHotelChange = async (e) => {\r\n        const hotelId = e.target.value;\r\n        setRoomRate({ ...roomRate, room_id: '' });\r\n        try {\r\n            const response = await axios.get(`${process.env.REACT_APP_API_URL}/rooms/`, { params: { hotel_id: hotelId } });\r\n            setRooms(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching rooms', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setRoomRate({ ...roomRate, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post(`${process.env.REACT_APP_API_URL}/room_rates/`, roomRate);\r\n            alert('Room rate added successfully');\r\n        } catch (error) {\r\n            console.error('Error adding room rate', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Add Room Rate</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <select name=\"hotel_id\" onChange={handleHotelChange}>\r\n                    <option value=\"\">Select Hotel</option>\r\n                    {hotels.map(hotel => (\r\n                        <option key={hotel.id} value={hotel.id}>{hotel.name}</option>\r\n                    ))}\r\n                </select>\r\n                <select name=\"room_id\" onChange={handleChange} value={roomRate.room_id}>\r\n                    <option value=\"\">Select Room</option>\r\n                    {rooms.map(room => (\r\n                        <option key={room.id} value={room.id}>{room.room_type}</option>\r\n                    ))}\r\n                </select>\r\n                <input type=\"date\" name=\"start_date\" placeholder=\"Start Date\" onChange={handleChange} required />\r\n                <input type=\"date\" name=\"end_date\" placeholder=\"End Date\" onChange={handleChange} required />\r\n                <input type=\"number\" step=\"0.01\" name=\"price\" placeholder=\"Price\" onChange={handleChange} required />\r\n                <button type=\"submit\">Add Room Rate</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddRoomRate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport HotelList from './components/HotelList';\r\nimport HotelForm from './components/HotelForm';\r\nimport RoomList from './components/RoomList';\r\nimport RoomRateList from './components/RoomRateList';\r\nimport AddRoomRate from './components/AddRoomRate';\r\n\r\nconst App = () => {\r\n    const [hotels, setHotels] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [showHotelList, setShowHotelList] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchHotels = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/hotels/`);\r\n                setHotels(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching hotels', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchHotels();\r\n    }, []);\r\n\r\n    const addHotel = (newHotel) => {\r\n        setHotels(prevHotels => [...prevHotels, newHotel]);\r\n    };\r\n\r\n    const toggleHotelList = () => {\r\n        setShowHotelList(prevState => !prevState);\r\n    };\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hotel and Room Management</h1>\r\n\r\n            {/* Flex container for the Hotel Form and Toggle Button */}\r\n            <div style={{ display: 'flex', alignItems: 'flex-start', gap: '10px', marginBottom: '20px' }}>\r\n                <HotelForm addHotel={addHotel} />\r\n                <button  onClick={toggleHotelList}>\r\n                    {showHotelList ? 'Hide Hotel List' : 'Show Hotel List'}\r\n                </button>\r\n            </div>\r\n\r\n            {showHotelList && <HotelList hotels={hotels} setHotels={setHotels} />}\r\n\r\n            {/* Room Management */}\r\n            <RoomList hotels={hotels} />\r\n\r\n            <h1>Room Rate Management</h1>\r\n            <AddRoomRate />\r\n            <RoomRateList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}